<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcoa.dao.FlowNodeMapper" >
  <resultMap id="BaseResultMap" type="com.hcoa.entity.FlowNode" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="node_num" property="nodeNum" jdbcType="VARCHAR" />
    <result column="node_caption" property="nodeCaption" jdbcType="VARCHAR" />
    <result column="node_code" property="nodeCode" jdbcType="VARCHAR" />
    <result column="tender_method" property="tenderMethod" jdbcType="VARCHAR" />
    <result column="start_confirm" property="startConfirm" jdbcType="INTEGER" />
    <result column="approve_or_not" property="approveOrNot" jdbcType="INTEGER" />
    <result column="sort_num" property="sortNum" jdbcType="BIGINT" />
    <result column="approve_project_id" property="approveProjectId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hcoa.entity.FlowNode" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, node_num, node_caption, node_code, tender_method, start_confirm, approve_or_not, 
    sort_num, approve_project_id
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hcoa.entity.FlowNodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from flow_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hcoa.entity.FlowNodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from flow_node
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from flow_node
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hcoa.entity.FlowNodeExample" >
    delete from flow_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hcoa.entity.FlowNode" >
    insert into flow_node (id, node_num, node_caption, 
      node_code, tender_method, start_confirm, 
      approve_or_not, sort_num, approve_project_id, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{nodeNum,jdbcType=VARCHAR}, #{nodeCaption,jdbcType=VARCHAR}, 
      #{nodeCode,jdbcType=VARCHAR}, #{tenderMethod,jdbcType=VARCHAR}, #{startConfirm,jdbcType=INTEGER}, 
      #{approveOrNot,jdbcType=INTEGER}, #{sortNum,jdbcType=BIGINT}, #{approveProjectId,jdbcType=BIGINT}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hcoa.entity.FlowNode" >
    insert into flow_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nodeNum != null" >
        node_num,
      </if>
      <if test="nodeCaption != null" >
        node_caption,
      </if>
      <if test="nodeCode != null" >
        node_code,
      </if>
      <if test="tenderMethod != null" >
        tender_method,
      </if>
      <if test="startConfirm != null" >
        start_confirm,
      </if>
      <if test="approveOrNot != null" >
        approve_or_not,
      </if>
      <if test="sortNum != null" >
        sort_num,
      </if>
      <if test="approveProjectId != null" >
        approve_project_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nodeNum != null" >
        #{nodeNum,jdbcType=VARCHAR},
      </if>
      <if test="nodeCaption != null" >
        #{nodeCaption,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null" >
        #{nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="tenderMethod != null" >
        #{tenderMethod,jdbcType=VARCHAR},
      </if>
      <if test="startConfirm != null" >
        #{startConfirm,jdbcType=INTEGER},
      </if>
      <if test="approveOrNot != null" >
        #{approveOrNot,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null" >
        #{sortNum,jdbcType=BIGINT},
      </if>
      <if test="approveProjectId != null" >
        #{approveProjectId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hcoa.entity.FlowNodeExample" resultType="java.lang.Integer" >
    select count(*) from flow_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update flow_node
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nodeNum != null" >
        node_num = #{record.nodeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeCaption != null" >
        node_caption = #{record.nodeCaption,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeCode != null" >
        node_code = #{record.nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.tenderMethod != null" >
        tender_method = #{record.tenderMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.startConfirm != null" >
        start_confirm = #{record.startConfirm,jdbcType=INTEGER},
      </if>
      <if test="record.approveOrNot != null" >
        approve_or_not = #{record.approveOrNot,jdbcType=INTEGER},
      </if>
      <if test="record.sortNum != null" >
        sort_num = #{record.sortNum,jdbcType=BIGINT},
      </if>
      <if test="record.approveProjectId != null" >
        approve_project_id = #{record.approveProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update flow_node
    set id = #{record.id,jdbcType=BIGINT},
      node_num = #{record.nodeNum,jdbcType=VARCHAR},
      node_caption = #{record.nodeCaption,jdbcType=VARCHAR},
      node_code = #{record.nodeCode,jdbcType=VARCHAR},
      tender_method = #{record.tenderMethod,jdbcType=VARCHAR},
      start_confirm = #{record.startConfirm,jdbcType=INTEGER},
      approve_or_not = #{record.approveOrNot,jdbcType=INTEGER},
      sort_num = #{record.sortNum,jdbcType=BIGINT},
      approve_project_id = #{record.approveProjectId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update flow_node
    set id = #{record.id,jdbcType=BIGINT},
      node_num = #{record.nodeNum,jdbcType=VARCHAR},
      node_caption = #{record.nodeCaption,jdbcType=VARCHAR},
      node_code = #{record.nodeCode,jdbcType=VARCHAR},
      tender_method = #{record.tenderMethod,jdbcType=VARCHAR},
      start_confirm = #{record.startConfirm,jdbcType=INTEGER},
      approve_or_not = #{record.approveOrNot,jdbcType=INTEGER},
      sort_num = #{record.sortNum,jdbcType=BIGINT},
      approve_project_id = #{record.approveProjectId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcoa.entity.FlowNode" >
    update flow_node
    <set >
      <if test="nodeNum != null" >
        node_num = #{nodeNum,jdbcType=VARCHAR},
      </if>
      <if test="nodeCaption != null" >
        node_caption = #{nodeCaption,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null" >
        node_code = #{nodeCode,jdbcType=VARCHAR},
      </if>
      <if test="tenderMethod != null" >
        tender_method = #{tenderMethod,jdbcType=VARCHAR},
      </if>
      <if test="startConfirm != null" >
        start_confirm = #{startConfirm,jdbcType=INTEGER},
      </if>
      <if test="approveOrNot != null" >
        approve_or_not = #{approveOrNot,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null" >
        sort_num = #{sortNum,jdbcType=BIGINT},
      </if>
      <if test="approveProjectId != null" >
        approve_project_id = #{approveProjectId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hcoa.entity.FlowNode" >
    update flow_node
    set node_num = #{nodeNum,jdbcType=VARCHAR},
      node_caption = #{nodeCaption,jdbcType=VARCHAR},
      node_code = #{nodeCode,jdbcType=VARCHAR},
      tender_method = #{tenderMethod,jdbcType=VARCHAR},
      start_confirm = #{startConfirm,jdbcType=INTEGER},
      approve_or_not = #{approveOrNot,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=BIGINT},
      approve_project_id = #{approveProjectId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcoa.entity.FlowNode" >
    update flow_node
    set node_num = #{nodeNum,jdbcType=VARCHAR},
      node_caption = #{nodeCaption,jdbcType=VARCHAR},
      node_code = #{nodeCode,jdbcType=VARCHAR},
      tender_method = #{tenderMethod,jdbcType=VARCHAR},
      start_confirm = #{startConfirm,jdbcType=INTEGER},
      approve_or_not = #{approveOrNot,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=BIGINT},
      approve_project_id = #{approveProjectId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>